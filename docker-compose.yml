version: "3.8"

services:
  mysql:
    image: mysql:8.0
    container_name: ecommerce-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-password123}
      MYSQL_DATABASE: ${DB_NAME:-ecommerce_mahasiswa}
      MYSQL_USER: app_user
      MYSQL_PASSWORD: ${DB_PASSWORD:-password123}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_PASSWORD:-password123}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ecommerce-backend
    restart: always
    depends_on:
      - mysql
    environment:
      # Database settings
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-8080}
      DB_HOST: mysql
      DB_USER: root
      DB_PASSWORD: ${DB_PASSWORD:-password123}
      DB_NAME: ${DB_NAME:-ecommerce_mahasiswa}
      DB_PORT: 3306

      # JWT settings
      JWT_SECRET: ${JWT_SECRET:-secret_key_for_jwt_please_change_in_production}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}

      # Appwrite settings - hardcoded
      APPWRITE_ENDPOINT: "http://tugas-akhir-sbd-appwrite-baa3ca-34-50-95-184.traefik.me/v1"
      APPWRITE_PROJECT_ID: "67ec168f001774966f85"
      APPWRITE_API_KEY: "standard_c198465575b7925e70d344fe9b76414e306f0d2f3d6137371e23a36bbf48c0d89f884981271b0f7de15b9d2162badf9cdaab963560bc99cc6278e99b02f17cb1d08d5cd81140c8c09397fcf503a3a2c1f4dd2056f46eb57d16bdd315f2b74e38600bd82e0ab061eb1786697cf7c1aa94e7a1bed5d0747f7e4fec6ac0bfb602f3"
      APPWRITE_BUCKET_ID: "67ec16ad001dd1f0a484"

      # Other settings
      LOG_LEVEL: ${LOG_LEVEL:-info}
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX: ${RATE_LIMIT_MAX:-100}
    ports:
      - "${PORT:-8080}:8080"
    volumes:
      - seed-data:/app/src/.seed_data
    networks:
      - app-network
    command: npm start

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
  seed-data:
    driver: local
